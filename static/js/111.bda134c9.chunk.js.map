{"version":3,"file":"static/js/111.bda134c9.chunk.js","mappings":"6JAGA,MA4DA,EA5DiBA,IAA2C,IAA1C,KAAEC,EAAI,SAAEC,EAAQ,SAAEC,EAAQ,OAAEC,GAAQJ,EACpD,MAAOK,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAASN,EAAKS,QAC7CC,EAAmBC,IAAwBL,EAAAA,EAAAA,UAASN,EAAKY,cACzDC,EAAgBC,IAAqBR,EAAAA,EAAAA,UAASN,EAAKe,UAAY,WAC/DC,EAAeC,IAAoBX,EAAAA,EAAAA,UAASN,EAAKkB,SAAW,IAOnE,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,aAAAC,OAAerB,EAAKsB,UAAY,YAAc,IAAKC,SAC9DnB,GACCoB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEJ,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLC,MAAOnB,EACPoB,SAAWC,GAAMpB,EAAeoB,EAAEC,OAAOH,UAE3CP,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLC,MAAOhB,EACPiB,SAAWC,GAAMjB,EAAqBiB,EAAEC,OAAOH,UAEjDF,EAAAA,EAAAA,MAAA,UACEE,MAAOb,EACPc,SAAWC,GAAMd,EAAkBc,EAAEC,OAAOH,OAAOH,SAAA,EAEnDJ,EAAAA,EAAAA,KAAA,UAAQO,MAAM,OAAMH,SAAC,UACrBJ,EAAAA,EAAAA,KAAA,UAAQO,MAAM,SAAQH,SAAC,YACvBJ,EAAAA,EAAAA,KAAA,UAAQO,MAAM,MAAKH,SAAC,YAEtBJ,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLC,MAAOV,EACPW,SAAWC,GAAMX,EAAiBW,EAAEC,OAAOH,UAE7CP,EAAAA,EAAAA,KAAA,UAAQW,QAhCGC,KACjB5B,EAAOH,EAAKgC,GAAIzB,EAAaG,EAAmBG,EAAgBG,GAChEX,GAAa,IA8BqBkB,SAAC,UAC7BJ,EAAAA,EAAAA,KAAA,UAAQW,QAASA,IAAMzB,GAAa,GAAOkB,SAAC,eAG9CC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEJ,EAAAA,EAAAA,KAAA,MAAAI,SAAKvB,EAAKS,SACVU,EAAAA,EAAAA,KAAA,KAAAI,SAAIvB,EAAKY,eACTY,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,aAAWvB,EAAKe,UAAY,aAC/BS,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,QAAMvB,EAAKkB,SAAW,cACzBM,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,WAASvB,EAAKsB,UAAY,YAAc,cAC3CH,EAAAA,EAAAA,KAAA,UAAQW,QAASA,IAAM5B,EAASF,EAAKgC,IAAIT,SACtCvB,EAAKsB,UAAY,eAAiB,mBAErCH,EAAAA,EAAAA,KAAA,UAAQW,QAASA,IAAMzB,GAAa,GAAMkB,SAAC,UAC3CJ,EAAAA,EAAAA,KAAA,UAAQW,QAASA,IAAM7B,EAASD,EAAKgC,IAAIT,SAAC,iBCpCpD,EAhBiBxB,IAAwD,IAAvD,MAAEkC,EAAK,aAAEC,EAAY,aAAEC,EAAY,WAAEC,GAAYrC,EACjE,OACEoB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWG,SACvBU,EAAMI,IAAKrC,IACVmB,EAAAA,EAAAA,KAACmB,EAAQ,CAEPtC,KAAMA,EACNC,SAAUiC,EACVhC,SAAUiC,EACVhC,OAAQiC,GAJHpC,EAAKgC,O","sources":["components/TaskItem.js","components/TaskList.js"],"sourcesContent":["// ✅ TaskItem.js\r\nimport React, { useState } from 'react';\r\n\r\nconst TaskItem = ({ task, onDelete, onToggle, onEdit }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedTitle, setEditedTitle] = useState(task.title);\r\n  const [editedDescription, setEditedDescription] = useState(task.description);\r\n  const [editedPriority, setEditedPriority] = useState(task.priority || 'Medium');\r\n  const [editedDueDate, setEditedDueDate] = useState(task.dueDate || '');\r\n\r\n  const handleSave = () => {\r\n    onEdit(task.id, editedTitle, editedDescription, editedPriority, editedDueDate);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`task-item ${task.completed ? 'completed' : ''}`}>\r\n      {isEditing ? (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={editedTitle}\r\n            onChange={(e) => setEditedTitle(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={editedDescription}\r\n            onChange={(e) => setEditedDescription(e.target.value)}\r\n          />\r\n          <select\r\n            value={editedPriority}\r\n            onChange={(e) => setEditedPriority(e.target.value)}\r\n          >\r\n            <option value=\"High\">High</option>\r\n            <option value=\"Medium\">Medium</option>\r\n            <option value=\"Low\">Low</option>\r\n          </select>\r\n          <input\r\n            type=\"date\"\r\n            value={editedDueDate}\r\n            onChange={(e) => setEditedDueDate(e.target.value)}\r\n          />\r\n          <button onClick={handleSave}>Save</button>\r\n          <button onClick={() => setIsEditing(false)}>Cancel</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h3>{task.title}</h3>\r\n          <p>{task.description}</p>\r\n          <p>Priority: {task.priority || 'Medium'}</p>\r\n          <p>Due: {task.dueDate || 'Not set'}</p>\r\n          <p>Status: {task.completed ? 'Completed' : 'Pending'}</p>\r\n          <button onClick={() => onToggle(task.id)}>\r\n            {task.completed ? 'Mark Pending' : 'Mark Complete'}\r\n          </button>\r\n          <button onClick={() => setIsEditing(true)}>Edit</button>\r\n          <button onClick={() => onDelete(task.id)}>Delete</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","// ✅ TaskList.js\r\nimport React from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nconst TaskList = ({ tasks, onDeleteTask, onToggleTask, onEditTask }) => {\r\n  return (\r\n    <div className=\"task-list\">\r\n      {tasks.map((task) => (\r\n        <TaskItem\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDeleteTask}\r\n          onToggle={onToggleTask}\r\n          onEdit={onEditTask} // ✅ Correctly passed\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;"],"names":["_ref","task","onDelete","onToggle","onEdit","isEditing","setIsEditing","useState","editedTitle","setEditedTitle","title","editedDescription","setEditedDescription","description","editedPriority","setEditedPriority","priority","editedDueDate","setEditedDueDate","dueDate","_jsx","className","concat","completed","children","_jsxs","type","value","onChange","e","target","onClick","handleSave","id","tasks","onDeleteTask","onToggleTask","onEditTask","map","TaskItem"],"sourceRoot":""}